using System;
using System.Collections.Generic;
using System.Diagnostics;
using WebApi.Core.Events;

namespace WebApi.Core
{
    public class SeleniumService : IEventListener<StatusCodeChecked>
    {
        private readonly IRepositoryFactory _repositoryFactory;

        public SeleniumService( IRepositoryFactory repositoryFactory )
        {
            Debug.WriteLine( $"constuctor: {this.GetType().FullName}" );
            _repositoryFactory = repositoryFactory;
        }

        public void Handle( StatusCodeChecked msg, IEventsDispatcher eventsDispatcher )
        {
            Debug.WriteLine( $"SeleniumService: handling StatusCodeChecked({msg.ResourceId})" );

            var publishActions = new List<Action>(); //будем копить отправку событий

            // Обрабатываем сообщение в транзакции
            _repositoryFactory.Execute( repository =>
            {
                try
                {
                    string html = "some html generated by web driver";
                    int pageSourceId = repository.CreatePageSource( msg.ResourceId, html );

                    var pageSourceCreated = new PageSourceCreated( pageSourceId );
                    publishActions.Add( () => eventsDispatcher.Publish( pageSourceCreated ) );

                    repository.Commit();
                }
                catch
                {
                    repository.Rollback();
                    throw;
                }
            } );

            // Работа выполнена, транзакция закоммичена, посылаем события
            publishActions.ForEach( action => action() );
        }

    }
}
